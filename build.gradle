apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'eclipse'
apply plugin: 'war'

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.7
version = '1.0'
project.webAppDirName = 'WebContent'

war.archiveName "ROOT.war"


eclipse {
	wtp {
		facet {
			facet name: 'jst.web', version: '3.0'
			facet name: 'jst.java', version: '1.8'
			facet name: 'wst.jsdt.web' , version: '1.0'   // Javascript 지정, 1.0
			
			
		}
	}
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
	maven { url "http://repo.spring.io/libs-release" }
	
}

def compilelib = [
	
		"spring": ['org.springframework:spring-webmvc:4.1.2.RELEASE',
					'org.springframework:spring-context:4.1.2.RELEASE',
					'org.springframework:spring-context-support:4.1.2.RELEASE',//벨로시티 추가
					'org.springframework:spring-oxm:4.1.2.RELEASE',//XML,JSON 추가 때문에. 
					'org.springframework:spring-jdbc:4.1.2.RELEASE', //MyBatis 추가
					'org.springframework:spring-tx:4.1.2.RELEASE' //MyBatis 추가
									
					
					
			],
		
		"aop": ['cglib:cglib-nodep:2.2.2', // Spring 3.2.x 이상에서는 빼도 된다. 
			],
		"Mybatis": ['org.mybatis:mybatis:3.2.2', //MyBatis 추가           
					'org.mybatis:mybatis-spring:1.2.0', //MyBatis 추가         
					//'mysql:mysql-connector-java:5.1.26', //MyBatis 추가          
			],
		
		"Velocity": ['org.apache.velocity:velocity:1.7', //벨로시티 추가
					 'velocity-tools:velocity-tools:2.0-beta1',
					 'commons-digester:commons-digester:2.1'				 
			
			],
		
		"XmlJson": ['com.thoughtworks.xstream:xstream:1.4.7',//XML타입추가
					'com.fasterxml.jackson.core:jackson-databind:2.5.0-rc1',//JSON 타입추가
					'com.fasterxml.jackson.core:jackson-annotations:2.6.3',
					'castor:castor:1.0',//unmarshal
					'org.codehaus.castor:castor:1.2'
				
					
			],		
		
		
		"etc": ['commons-logging:commons-logging:1.2',
				'ch.qos.logback:logback-classic:1.0.6',
				'org.slf4j:slf4j-api:1.7.6',
				'ch.qos.logback:logback-classic:1.1.2',
				'commons-dbcp:commons-dbcp:1.4',	
				'org.projectlombok:lombok:1.14.8',
				'commons-fileupload:commons-fileupload:1.3.1', // 파일업로드
				'javax.validation:validation-api:1.1.0.Final' // 밸리데이션
				
				
			]	
	
	]


sourceSets {
	main {
		resources {
			//include '/WebContent/WEB-INF/lib/**'  // jenkis 오류 때문에 추가..  외부 Jar파일 추가 때문에.. 
			//include 'com/air/interpark/**'
			 
			//exclude '/WebContent/WEB-INF/lib/**'
			//exclude '/WebContent/**'
		}
	}
}


dependencies {
	compile compilelib.spring, compilelib.Mybatis, compilelib.Velocity, compilelib.XmlJson, compilelib.etc	
	providedCompile "javax.servlet:javax.servlet-api:3.0.1"	
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'	
	testCompile 'org.springframework:spring-test:4.1.2.RELEASE',compilelib.aop, compilelib.Velocity, compilelib.XmlJson	
    testCompile group: 'junit', name: 'junit', version: '4.12'
	runtime "javax.servlet:jstl:1.2"
	
	
	compile fileTree(dir: 'WebContent/WEB-INF/lib' , include: '*.jar')
	compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
	
	
		
	
}

/*
sourceSets {
	main {
		java {
			srcDir 'src'
			include '/WebContent/WEB-INF/lib'
	   }
   }
}
*/


// logback(slf4j)를 사용하기 때문에 모든 의존성에서 commons-logging는 제외
[configurations.runtime, configurations.default]*.exclude(module: 'commons-logging')


// JAVA 컴파일시 인코딩 설정
 [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

 
test {
    systemProperties 'property': 'value'
}


uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

war {
	exclude 'WEB-INF/lib/**'
	exclude 'resources/**'
	//exclude 'WEB-INF/classes/**'
	//include 'resources/**'
}
